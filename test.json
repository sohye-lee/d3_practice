networkSeries.data = [{'name': 'BLACK','children':[{'name':'523 : خودم','value':59},{'name':'520 : مستر اوجاقی','value':9},{'name':'121 : خود نامردش','value':4},{'name':'750 : خودت','value':1},{'name':'220 : خانم شامانی','value':35},{'name':'988','value':0},{'name':'503','value':0},{'name':'223 : خانم محمدی منابع انسانی','value':12},{'name':'500 : مدیریت معظم عامل','value':5},{'name':'250 : حضرت محمدی','value':16},{'name':'214 : خانم نواب  ','value':57},{'name':'268 : خانم علی پور','value':2},{'name':'307 : سیم بر','value':4},{'name':'521 : ایزد خواجوی','value':7},{'name':'207 : آقای غفوری','value':0},{'name':'302','value':6},{'name':'106 : خانم خادمی','value':2},{'name':'610 : فاتحی','value':14},{'name':'622','value':1},{'name':'604 : خانم زارعی ، همدان','value':7},{'name':'777','value':0},{'name':'126','value':0},{'name':'305','value':0},{'name':'306','value':1},{'name':'506','value':1},{'name':'505','value':1},{'name':'300','value':1},{'name':'102','value':3},{'name':'104 : Sale-04','value':1},{'name':'620 : گماری ، تست فرداد','value':8},{'name':'212 : خانم نوروزی','value':10},{'name':'10220','value':0},{'name':'625 : Hamedan-625','value':1},{'name':'400 : آقای حمید رنجبران','value':1}]},{'name':'خارجی','children':[{'name':'909123618816 : حاج اقای عابدی','value':1},{'name':'anonymous : Anonymous','value':5},{'name':'926750319','value':2},{'name':'219151115098','value':0},{'name':'909151115098 : personal!','value':0},{'name':'988227921','value':0},{'name':'909120610652 : اوجاقی','value':0},{'name':'902634431467','value':2},{'name':'923824511','value':13},{'name':'976830527','value':2},{'name':'958602','value':6},{'name':'958620','value':2},{'name':'977296493','value':0},{'name':'9151115098 : personal !','value':0},{'name':'45276000','value':0},{'name':'909122252385 : مدیر سیستم!','value':0}]}]







<script>


am5.ready(function() {

// Create root element
// https://www.amcharts.com/docs/v5/getting-started/#Root_element
var root = am5.Root.new('barChartBlack');

// Set themes
// https://www.amcharts.com/docs/v5/concepts/themes/
root.setThemes([
  am5themes_Animated.new(root)
]);

var data = [
  {
    name: 'Monica',
    steps: 45688,
    pictureSettings: {
      src: 'https://www.amcharts.com/wp-content/uploads/2019/04/monica.jpg'
    }
  },
  {
    name: 'Joey',
    steps: 35781,
    pictureSettings: {
      src: 'https://www.amcharts.com/wp-content/uploads/2019/04/joey.jpg'
    }
  },
  {
    name: 'Ross',
    steps: 25464,
    pictureSettings: {
      src: 'https://www.amcharts.com/wp-content/uploads/2019/04/ross.jpg'
    }
  },
  {
    name: 'Phoebe',
    steps: 18788,
    pictureSettings: {
      src: 'https://www.amcharts.com/wp-content/uploads/2019/04/phoebe.jpg'
    }
  },
  {
    name: 'Rachel',
    steps: 15465,
    pictureSettings: {
      src: 'https://www.amcharts.com/wp-content/uploads/2019/04/rachel.jpg'
    }
  },
  {
    name: 'Chandler',
    steps: 11561,
    pictureSettings: {
      src: 'https://www.amcharts.com/wp-content/uploads/2019/04/chandler.jpg'
    }
  }
];

// Create chart
// https://www.amcharts.com/docs/v5/charts/xy-chart/
var chart = root.container.children.push(
  am5xy.XYChart.new(root, {
    panX: false,
    panY: false,
    paddingLeft:0,
    paddingRight:30,
    wheelX: 'none',
    wheelY: 'none'
  })
);

// Create axes
// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/

var yRenderer = am5xy.AxisRendererY.new(root, {
  minorGridEnabled:true
});
yRenderer.grid.template.set('visible', false);

var yAxis = chart.yAxes.push(
  am5xy.CategoryAxis.new(root, {
    categoryField: 'name',
    renderer: yRenderer,
    paddingRight:40
  })
);

var xRenderer = am5xy.AxisRendererX.new(root, {
  minGridDistance:80,
  minorGridEnabled:true
});

var xAxis = chart.xAxes.push(
  am5xy.ValueAxis.new(root, {
    min: 0,
    renderer: xRenderer
  })
);

// Add series
// https://www.amcharts.com/docs/v5/charts/xy-chart/series/
var series = chart.series.push(
  am5xy.ColumnSeries.new(root, {
    name: 'Income',
    xAxis: xAxis,
    yAxis: yAxis,
    valueXField: 'steps',
    categoryYField: 'name',
    sequencedInterpolation: true,
    calculateAggregates: true,
    maskBullets: false,
    tooltip: am5.Tooltip.new(root, {
      dy: -30,
      pointerOrientation: 'vertical',
      labelText: '{valueX}'
    })
  })
);

series.columns.template.setAll({
  strokeOpacity: 0,
  cornerRadiusBR: 10,
  cornerRadiusTR: 10,
  cornerRadiusBL: 10,
  cornerRadiusTL: 10,
  maxHeight: 50,
  fillOpacity: 0.8
});

var currentlyHovered;

series.columns.template.events.on('pointerover', function(e) {
  handleHover(e.target.dataItem);
});

series.columns.template.events.on('pointerout', function(e) {
  handleOut();
});

function handleHover(dataItem) {
  if (dataItem && currentlyHovered != dataItem) {
    handleOut();
    currentlyHovered = dataItem;
    var bullet = dataItem.bullets[0];
    bullet.animate({
      key: 'locationX',
      to: 1,
      duration: 600,
      easing: am5.ease.out(am5.ease.cubic)
    });
  }
}

function handleOut() {
  if (currentlyHovered) {
    var bullet = currentlyHovered.bullets[0];
    bullet.animate({
      key: 'locationX',
      to: 0,
      duration: 600,
      easing: am5.ease.out(am5.ease.cubic)
    });
  }
}


var circleTemplate = am5.Template.new({});

series.bullets.push(function(root, series, dataItem) {
  var bulletContainer = am5.Container.new(root, {});
  var circle = bulletContainer.children.push(
    am5.Circle.new(
      root,
      {
        radius: 34
      },
      circleTemplate
    )
  );

  var maskCircle = bulletContainer.children.push(
    am5.Circle.new(root, { radius: 27 })
  );

  // only containers can be masked, so we add image to another container
  var imageContainer = bulletContainer.children.push(
    am5.Container.new(root, {
      mask: maskCircle
    })
  );

  // not working
  var image = imageContainer.children.push(
    am5.Picture.new(root, {
      templateField: 'pictureSettings',
      centerX: am5.p50,
      centerY: am5.p50,
      width: 60,
      height: 60
    })
  );

  return am5.Bullet.new(root, {
    locationX: 0,
    sprite: bulletContainer
  });
});

// heatrule
series.set('heatRules', [
  {
    dataField: 'valueX',
    min: am5.color(0xe5dc36),
    max: am5.color(0x5faa46),
    target: series.columns.template,
    key: 'fill'
  },
  {
    dataField: 'valueX',
    min: am5.color(0xe5dc36),
    max: am5.color(0x5faa46),
    target: circleTemplate,
    key: 'fill'
  }
]);

series.data.setAll(data);
yAxis.data.setAll(data);

var cursor = chart.set('cursor', am5xy.XYCursor.new(root, {}));
cursor.lineX.set('visible', false);
cursor.lineY.set('visible', false);

cursor.events.on('cursormoved', function() {
  var dataItem = series.get('tooltip').dataItem;
  if (dataItem) {
    handleHover(dataItem)
  }
  else {
    handleOut();
  }
})

// Make stuff animate on load
// https://www.amcharts.com/docs/v5/concepts/animations/
series.appear();
chart.appear(1000, 100);

}); // end am5.ready()
</script>



am5.ready(function() {

// Create root element
// https://www.amcharts.com/docs/v5/getting-started/#Root_element
var root = am5.Root.new('chartdiv');

// Set themes
// https://www.amcharts.com/docs/v5/concepts/themes/
root.setThemes([
  am5themes_Animated.new(root)
]);

// Create chart
// https://www.amcharts.com/docs/v5/charts/radar-chart/
var chart = root.container.children.push(am5radar.RadarChart.new(root, {
  panX: false,
  panY: false,
  wheelX: 'panX',
  wheelY: 'zoomX',
  innerRadius: am5.percent(20),
  startAngle: -90,
  endAngle: 180
}));


// Data
var data = [{
  category: 'Research',
  value: 80,
  full: 100,
  columnSettings: {
    fill: chart.get('colors').getIndex(0)
  }
}, {
  category: 'Marketing',
  value: 35,
  full: 100,
  columnSettings: {
    fill: chart.get('colors').getIndex(1)
  }
}, {
  category: 'Distribution',
  value: 92,
  full: 100,
  columnSettings: {
    fill: chart.get('colors').getIndex(2)
  }
}, {
  category: 'Human Resources',
  value: 68,
  full: 100,
  columnSettings: {
    fill: chart.get('colors').getIndex(3)
  }
}];

// Add cursor
// https://www.amcharts.com/docs/v5/charts/radar-chart/#Cursor
var cursor = chart.set('cursor', am5radar.RadarCursor.new(root, {
  behavior: 'zoomX'
}));

cursor.lineY.set('visible', false);

// Create axes and their renderers
// https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_axes
var xRenderer = am5radar.AxisRendererCircular.new(root, {
  //minGridDistance: 50
});

xRenderer.labels.template.setAll({
  radius: 10
});

xRenderer.grid.template.setAll({
  forceHidden: true
});

var xAxis = chart.xAxes.push(am5xy.ValueAxis.new(root, {
  renderer: xRenderer,
  min: 0,
  max: 100,
  strictMinMax: true,
  numberFormat: '#'%'',
  tooltip: am5.Tooltip.new(root, {})
}));


var yRenderer = am5radar.AxisRendererRadial.new(root, {
  minGridDistance: 20
});

yRenderer.labels.template.setAll({
  centerX: am5.p100,
  fontWeight: '500',
  fontSize: 18,
  templateField: 'columnSettings'
});

yRenderer.grid.template.setAll({
  forceHidden: true
});

var yAxis = chart.yAxes.push(am5xy.CategoryAxis.new(root, {
  categoryField: 'category',
  renderer: yRenderer
}));

yAxis.data.setAll(data);


// Create series
// https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_series
var series1 = chart.series.push(am5radar.RadarColumnSeries.new(root, {
  xAxis: xAxis,
  yAxis: yAxis,
  clustered: false,
  valueXField: 'full',
  categoryYField: 'category',
  fill: root.interfaceColors.get('alternativeBackground')
}));

series1.columns.template.setAll({
  width: am5.p100,
  fillOpacity: 0.08,
  strokeOpacity: 0,
  cornerRadius: 20
});

series1.data.setAll(data);


var series2 = chart.series.push(am5radar.RadarColumnSeries.new(root, {
  xAxis: xAxis,
  yAxis: yAxis,
  clustered: false,
  valueXField: 'value',
  categoryYField: 'category'
}));

series2.columns.template.setAll({
  width: am5.p100,
  strokeOpacity: 0,
  tooltipText: '{category}: {valueX}%',
  cornerRadius: 20,
  templateField: 'columnSettings'
});

series2.data.setAll(data);

// Animate chart and series in
// https://www.amcharts.com/docs/v5/concepts/animations/#Initial_animation
series1.appear(1000);
series2.appear(1000);
chart.appear(1000, 100);

}); // end am5.ready()








// =====================


<script src='https://cdn.amcharts.com/lib/5/index.js'></script>
<script src='https://cdn.amcharts.com/lib/5/xy.js'></script>
<script src='https://cdn.amcharts.com/lib/5/radar.js'></script>
<script src='https://cdn.amcharts.com/lib/5/themes/Animated.js'></script>

<!-- Chart code -->
<script>
am5.ready(function() {

// Create root element
// https://www.amcharts.com/docs/v5/getting-started/#Root_element
var root = am5.Root.new('chartdiv');

// Set themes
// https://www.amcharts.com/docs/v5/concepts/themes/
root.setThemes([
  am5themes_Animated.new(root)
]);

// Data
// https://www.amcharts.com/docs/v5/charts/radar-chart/#Setting_data
var data = [{
  category: 'One',
  value1: 8,
  value2: 2
}, {
  category: 'Two',
  value1: 11,
  value2: 4
}, {
  category: 'Three',
  value1: 7,
  value2: 6
}, {
  category: 'Four',
  value1: 13,
  value2: 8
}, {
  category: 'Five',
  value1: 12,
  value2: 10
}, {
  category: 'Six',
  value1: 15,
  value2: 12
}, {
  category: 'Seven',
  value1: 9,
  value2: 14
}, {
  category: 'Eight',
  value1: 6,
  value2: 16
}];

// Create chart
// https://www.amcharts.com/docs/v5/charts/radar-chart/
var chart = root.container.children.push(
  am5radar.RadarChart.new(root, {
    panX: false,
    panY: false,
    wheelX: 'panX',
    wheelY: 'zoomX'
  })
);

// Add cursor
// https://www.amcharts.com/docs/v5/charts/radar-chart/#Cursor
var cursor = chart.set('cursor', am5radar.RadarCursor.new(root, {
  behavior: 'zoomX'
}));

cursor.lineY.set('visible', false);

// Create axes and their renderers
// https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_axes
var xRenderer = am5radar.AxisRendererCircular.new(root, {
  cellStartLocation: 0.2,
  cellEndLocation: 0.8
});

xRenderer.labels.template.setAll({
  radius: 10
});

var xAxis = chart.xAxes.push(
  am5xy.CategoryAxis.new(root, {
    maxDeviation: 0,
    categoryField: 'category',
    renderer: xRenderer,
    tooltip: am5.Tooltip.new(root, {})
  })
);

xAxis.data.setAll(data);

var yAxis = chart.yAxes.push(
  am5xy.ValueAxis.new(root, {
    renderer: am5radar.AxisRendererRadial.new(root, {})
  })
);

// Create series
// https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_series
for (var i = 1; i <= 2; i++) {
  var series = chart.series.push(
    am5radar.RadarColumnSeries.new(root, {
      name: 'Series ' + i,
      xAxis: xAxis,
      yAxis: yAxis,
      valueYField: 'value' + i,
      categoryXField: 'category'
    })
  );

  series.columns.template.setAll({
    tooltipText: '{name}: {valueY}',
    width: am5.percent(100)
  });

  series.data.setAll(data);
  
  series.appear(1000);
}

// Add scrollbars
chart.set('scrollbarX', am5.Scrollbar.new(root, { orientation: 'horizontal', exportable: false }));
chart.set('scrollbarY', am5.Scrollbar.new(root, { orientation: 'vertical', exportable: false }));


// Animate chart
// https://www.amcharts.com/docs/v5/concepts/animations/#Initial_animation
chart.appear(1000, 100);

}); // end am5.ready()
</script>




// BUBBLE

<script>
 

var raw;

const exceptions = ['is', 'are', 'he', 'a', 'there', 'were', 'they', 'she', 'the', 'and', 'or', 'by', 'to', 'as', 'with', 'at', 'for', 'from', 'so', 'how', 'where', 'here', 'all', 'do', 'not', 'who', 'of', 'in', 'out', 'that', 'have', 'your', 'our', 'but', 'if', 'on', 'it', 'we', '1', '2', 'i', '3','4', 'than', 'this', 'these', 'why', 'an', 'be', 'can', 'was', ];

var size = Math.min(Math.min(window.innerWidth, window.innerHeight), 600);
var color = d3.scaleOrdinal(d3.schemeCategory20c);

var chart = d3.select('body')
	.append('svg')
		.attr('width', size)
		.attr('height', size);

var pack = d3.pack()
		.size([size, size])
		.padding(size*0.005);

d3.text('https://clavis-wholesale.s3.amazonaws.com/sop_test.txt', function(error, data) {
	if (error) throw error;

	raw = data.split(/\W+/);

	var keys = [];

	// count the word frequency
	var counts = raw.reduce(function(obj, word) {
		if(!obj[word]) {
			obj[word] = 0;
			if (!exceptions.includes(word)) {
				keys.push(word);
				
			}
		}
		obj[word]++;
		return obj;
	}, {});

	// sort the keys from highest to lowest
	keys.sort(function(a,b) {
		return counts[b] - counts[a];
	});

	// only keep words used 10 or more times
	// keys = keys.filter(function(key) {
	// 	return counts[key] >= 10 ? key : '';
	// });

	var root = d3.hierarchy({children: keys})
			.sum(function(d) { return counts[d]; });

	console.log(root);

	var node = chart.selectAll('.node')
		.data(pack(root).leaves())
		.enter().append('g')
			.attr('class', 'node')
			.attr('transform', function(d) { return 'translate(' + d.x + ',' + d.y + ')'; });

	node.append('circle')
			.attr('id', function(d) { return d.data; })
			.attr('r', function(d) { return d.r; })
			.style('fill', function(d) { return color(d.data); });

	node.append('clipPath')
			.attr('id', function(d) { return 'clip-' + d.data; })
		.append('use')
			.attr('xlink:href', function(d) { return '#' + d.data; });

	node.append('text')
			.attr('clip-path', function(d) { return 'url(#clip-' + d.data + ')'; })
		.append('tspan')
			.attr('x', 0)
			.attr('y', function(d) { return d.r/8; })
			.attr('font-size', function(d) { return d.r/2; })
			.text(function(d) { return d.data; });

});

</script>